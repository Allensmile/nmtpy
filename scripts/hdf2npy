#!/usr/bin/env python
import os
import sys

import h5py
import numpy as np

splits = {
            "train"     : np.s_[:29000],
            "val"       : np.s_[29000:30014],
            "test"      : np.s_[30014:],
         }

if __name__ == '__main__':
    try:
        h5file = sys.argv[1]
    except IndexError as ie:
        print "Usage: %s <hdf5 file>" % sys.argv[0]
        sys.exit(1)

    hf = h5py.File(h5file, 'r')
    feats = hf['feats']

    print "Features shape: ", feats.shape
    feat_size = feats.shape[1]

    sizes = []
    sizes.append(splits['train'].stop)
    sizes.append(splits['val'].stop - splits['val'].start)
    sizes.append(feats.shape[0] - (sizes[0] + sizes[1]))

    full_size = sum(sizes)
    print "Full dataset has %d samples" % full_size


    fname = os.path.splitext(os.path.basename(h5file))[0]
    for i, sp in enumerate(['train', 'val', 'test']):
        print 'Reading %s into numpy array' % sp
        mat = np.empty((sizes[i], feat_size), dtype=np.float32)
        feats.read_direct(mat, source_sel=splits[sp])
        split_fname = os.path.join(os.path.dirname(h5file), "%s.%s" % (fname, sp))
        print 'Saving numpy array to %s.npy' % split_fname
        np.save(split_fname, mat)

    full_mat = np.empty((full_size, feat_size), dtype=np.float32)
    feats.read_direct(full_mat)

    np.save(os.path.splitext(h5file)[0], full_mat)
